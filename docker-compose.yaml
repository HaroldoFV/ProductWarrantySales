services:
  warranty-api:
    build:
      context: .
      dockerfile: src/microservices/WarrantyMicroservice/WarrantyMicroservice.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8081:8080"
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  sale-api:
    build:
      context: .
      dockerfile: src/microservices/SaleMicroservice/SaleMicroservice.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8082:8080"
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  product-api:
    build:
      context: .
      dockerfile: src/microservices/ProductMicroservice/ProductMicroservice.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8083:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  microservices-net:
    driver: bridge